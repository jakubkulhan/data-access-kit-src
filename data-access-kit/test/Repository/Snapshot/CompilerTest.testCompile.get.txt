<?php declare(strict_types=1);

namespace DataAccessKit\Repository\Fixture;

use DataAccessKit\PersistenceInterface;
use DataAccessKit\Registry;
use DataAccessKit\ValueConverterInterface;

final class GetRepository implements GetRepositoryInterface
{
	public function __construct(
		private readonly PersistenceInterface $persistence,
		private readonly Registry $registry,
		private readonly ValueConverterInterface $valueConverter,
	)
	{
	}

	public function getById(
		int $id,
	): Foo
	{
		$_table = $this->registry->get(Foo::class);
		$result = $this->persistence->query(Foo::class, 'SELECT t.id, t.title FROM foos t WHERE t.id = ?', [$this->valueConverter->objectToDatabase($_table, $_table->columns['id'], $id)]);
		$objects = iterator_to_array($result);
		if (count($objects) === 0) {
			throw new \RuntimeException("Entity not found.");
		} else if (count($objects) > 1) {
			throw new \RuntimeException("Multiple entities found.");
		}
		return $objects[0];
	}
}
