<?php declare(strict_types=1);

namespace DataAccessKit\Repository\Fixture;

use DataAccessKit\Attribute\Column;
use DataAccessKit\PersistenceInterface;

final class PassMethodAttributesRepository implements PassMethodAttributesRepositoryInterface
{
	private object $getByIdArguments;

	public function __construct(
		private readonly PersistenceInterface $persistence,
	)
	{
		$this->getByIdArguments = new class {
			#[Column(name: "id")]
			public int $id;
		};
	}

	#[PassAttribute('s', 1, a: ['a'])]
	public function getById(
		int $id,
	): Foo
	{
		$arguments = clone $this->getByIdArguments;
		$arguments->id = $id;
		$arguments = $this->persistence->toRow($arguments);

		$result = $this->persistence->query(Foo::class, 'SELECT t.id, t.title FROM foos t WHERE t.id = ?', [$arguments['id']]);

		$objects = iterator_to_array($result);
		if (count($objects) === 0) {
			throw new LogicException("Not found");
		} else if (count($objects) > 1) {
			throw new LogicException("Multiple objects found");
		}
		return $objects[0];
	}
}
