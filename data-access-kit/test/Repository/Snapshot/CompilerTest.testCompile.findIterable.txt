<?php declare(strict_types=1);

namespace DataAccessKit\Repository\Fixture;

use DataAccessKit\Attribute\Column;
use DataAccessKit\PersistenceInterface;

final class FindIterableRepository implements FindIterableRepositoryInterface
{
	private object $findByTitleArguments;

	public function __construct(
		private readonly PersistenceInterface $persistence,
	)
	{
		$this->findByTitleArguments = new class {
			#[Column(name: "title")]
			public string $title;
		};
	}

	public function findByTitle(
		string $title,
	): iterable
	{
		$arguments = clone $this->findByTitleArguments;
		$arguments->title = $title;
		$arguments = $this->persistence->toRow($arguments);

		$result = $this->persistence->select(Foo::class, 'SELECT t.id, t.title FROM foos t WHERE t.title = ?', [$arguments['title']]);

		return $result;
	}
}
