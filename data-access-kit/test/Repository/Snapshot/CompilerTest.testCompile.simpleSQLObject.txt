<?php declare(strict_types=1);

namespace DataAccessKit\Repository\Fixture;

use DataAccessKit\PersistenceInterface;
use DataAccessKit\Repository\Exception\MultipleObjectsFoundException;
use DataAccessKit\Repository\Exception\NotFoundException;

final class SimpleSQLObjectRepository implements SimpleSQLObjectRepositoryInterface
{
	public function __construct(
		private readonly PersistenceInterface $persistence,
	)
	{
	}

	public function getFirst(): Foo
	{
		$result = $this->persistence->select(Foo::class, 'SELECT id, title FROM foos WHERE id = (SELECT MIN(id) FROM foos)', []);

		$objects = iterator_to_array($result);
		if (count($objects) === 0) {
			throw new NotFoundException('DataAccessKit\\Repository\\Fixture\\Foo');
		} else if (count($objects) > 1) {
			throw new MultipleObjectsFoundException('DataAccessKit\\Repository\\Fixture\\Foo');
		}
		return $objects[0];
	}
}
