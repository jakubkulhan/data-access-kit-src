<?php declare(strict_types=1);

namespace DataAccessKit\Repository\Fixture;

use DataAccessKit\Attribute\Column;
use DataAccessKit\PersistenceInterface;

final class VariableSQLRepository implements VariableSQLRepositoryInterface
{
	private object $findByTitleAffixAndNotIdArguments;

	public function __construct(
		private readonly PersistenceInterface $persistence,
	)
	{
		$this->findByTitleAffixAndNotIdArguments = new class {
			#[Column(name: "titleAffix")]
			public string $titleAffix;
			#[Column(name: "id")]
			public int $id;
		};
	}

	public function findByTitleAffixAndNotId(
		string $titleAffix,
		int $id,
	): array
	{
		$arguments = clone $this->findByTitleAffixAndNotIdArguments;
		$arguments->titleAffix = $titleAffix;
		$arguments->id = $id;
		$arguments = $this->persistence->toRow($arguments);

		$result = $this->persistence->select(Foo::class, '
				SELECT
					id,
					title
				FROM foos
				WHERE
				(title LIKE CONCAT(\'%\', ?) 
				    OR title LIKE CONCAT(?, \'%\'))
				AND id != ?', [$arguments['titleAffix'], $arguments['titleAffix'], $arguments['id']]);

		return iterator_to_array($result);
	}
}
